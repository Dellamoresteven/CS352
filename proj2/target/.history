run
run examples/valid_arithm.scala 
run "val x = 5; x"
run 1+1
run 1+2
run 1+1
test
run 1+1
run 1+1=
run 1+1
run "1+1"
run 1+1
run "1+1"
run 1+1
run 1-1
test
run 2*2
run 2+2*4
run val x=3
run" val x=3"
run "val x=3"
run" val x=3"
run "val x=3"
run "var x=3"
run "val x=3"
run "val x=3;"
run "val x=3"
run val x=3
run val x=3;
run "val x=3"
run "val x=3;"
run "val x=3"
run "val x=3;x"
test
run "if()"
run "1+1
run "1+1"
run "1+1
run "1+1"
run "if()"
run "if(5=5)"
run "if (2 > 4) 1+4"
run "if (4 > 2) 1+4"
run "if (4 > 2) 1+5"
run "if (4 > 2) 2+5"
if (0 == 0) 2
run if (0 == 0) 2
run if(0 == 0) 2
run if(0 > 0) 2
run "if (0 == 0) 2"
run "if (4 > 2) 2+5"
if (2 > 4) 1 + 4 else 4
run "if (2 > 4) 1 + 4 else 4"
run "if (2 > 4) 1 + 4"
run "if (2 > 4) 1 + 6"
run "if (2 > 4) 1 + 4 else 4"
run "if (2 > 4) 1 + 6"
run "if (2 > 4) 1 + 4 else 4"
run "if (4 > 2) 1 + 4 else 4"
run "if (2 > 4) 1 + 4 else 4"
run "if (4 > 2) 1 + 4 else 4"
run "if (4 > 4) 1 + 4 else 4"
run "if (5 > 4) 1 + 4 else 4"
run "if (5 > 4) if(5>4) 1 else 8 else 4"
test
run "if (5 > 4) if(5>4) 1 else 8 else 4"
run "if (5 > 4) if(4>5) 1 else 8 else 4"
run "if (5 > 5) if(4>5) 1 else 8 else 4"
run "if (5 > 4) 1 + 4 * 5 else 4"
run "val x = 0; x"
run "val x = 0;x"
run "val x = 0; x"
run "val x = 5; x"
run "val x = 6; x"
test
run "var x = 0; x = (x = x + 2) - 1"
test
run "val x = 0; x = (x = x + 2) - 1"
run "var x = 0; x = (x = x + 2) - 1"
run "val x = 0; x = (x = x + 2) - 1"
run "var x = 0; x = (x = x + 2) - 1"
run "var x = 0; x = - 1"
run "var x = 0; x = -1"
run "var x = 0; x = -1+5"
test
run "var x = 0; x = (x = x + 2) - 1"
run "while(1==1) 3
run "while(1==1) 3"
run "while(1==1) 3;"
run "while(1==1) 3+1;"
run "while(1>=1)3+1;"
run "while(2>1)3+1;"
run "while(2>1) 3+1;"
run "while(2>1) 3+1;2"
test
run "while(1>2) 3+1;2"
test
 + 3 4
run 1 + 3 4
run "1 + 3 4"
run "if (0 == 0) 2"
val x == 4; x
run "val x == 4; x"
run examples/invalid_syntax_loop.scala
run examples/invalid_syntax_mut_variables.scala
test
run examples/invalid_syntax_mut_variables.scala
run examples/stevescratch.scala
test
run examples/stevescratch.scala
test
run examples/stevescratch.scala
test
run examples/stevescratch.scala
git status
run "if(1==1) 3
run "if(1==1) 3 else 2
run "if(1==1) 3 else 2"
run examples/stevescratch.scala
run "val x = 5; x"
run "val x = -5; x" intStack
run "5" intStack
run "5"
run "5" intStack
run "-5" intStack
run "5+5" intStack
run "-5" intStack
run "5+5" intStack
run "5-5" intStack
run "val x = 5;" intStack
run "val x = 5;x" intStack
run "val x = 5; x" intStack
run "val x = 6; x" intStack
run "val x = 6+5; x" intStack
run "val x = 6; x" intStack
run "val x = 6; x * 2" intStack
run "val x = 6; x * 2" intStack Lit(6)
BHH Prim(*,Ref(x
run "val x = 6; x * 2" intStack Lit(6)
run "val x = 6; x * 2" intStack
run "val x = 6; x * 2; x" intStack
run "val x = 6; x * 2" intStack
run "val x = 5; x * 2" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 5; x * 2" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 5; x * 2" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 5; x * 2 + x+x" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 5; x * 2" intStack
test
ls
test
run "if(1==1) 3
run "if(1==1) 3"
run "if(1==1) 3";
run "if(1==1) 3;"
run "if(1==1) 3 else 5";
run "if(1==1) 3 else 5;
run "if(1==1) 3 else 5;"
run "if(1==1) 3 else 5"
run "if(1!=1) 3 else 5"
test
run "var x = 5; x * 2" intStack
run "var x = 5; x * 2 * x" intStack
run "var x = 5; x * 2 _ x" intStack
run "var x = 5; x * 2 + x" intStack
run "var x = 5; x * 2 * x" intStack
test
run "var x = 0; x = (x = x + 2) - 1"
run "var x = 0; x = (x = x + 2) - 1" intStack
run "var x = 0; x = (x = x + 2) - 1"
run "var x = 0; x = (x = x + 2) - 1" intStack
run "var x = 5; x * 2" intStack
run "val x = 5; x * 2" intStack
run "var x = 5; x * 2" intStack
run "val x = 5; x * 2" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 5; x * 2" intStack
run "val x = 5; x * 2 + 2" intStack
run "val x = 5; x * 2 + 5" intStack
run "val x = 5; x * 2" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 5; 2 * x" intStack
run "val x = 0; x = (x = x + 2) - 1" intStack
run "val x = 5; x * 2 + x" intStack
run "val x = 0; x = (x = x + 2) - 1" intStack
run "val x = 0; val y = 3; x = (x = x + 2) - 1" intStack
run "val x = 0; val y = 3; x = (x = y + x) - 1" intStack
run "var x = 0; val y = 3; x = (x = y + x) - 1" intStack
run "val x = 0; val y = 3; x = (x = y + x) - 1" intStack
run "var x = 0; val y = 3; x = (x = y + x) - 1" intStack
run "var x = 0; x" intStack
run "var x = 0; x = 3" intStack
run "var x = 0; x" intStack
run "var x = 0; x = 3" intStack
run "var x = 0; val y = 3; x = (x = y + x) - 1" intStack
run "val x = 0; val y = 3; x = (x = y + x) - 1" intStack
test
run "var x = 1; x = 5; 4
run "var x = 1; x = 5; 4"
run "var x = 1; val x = 5; 4"
test
run "val x = 5+5;x" compX86
run "val x = 5-5;x" compX86
run "val x = 5+5;x" compX86
run "val x = 5-5;x" compX86
run "5+5" compX86
run "5" compX86
run "-5" compX86
run "5+5" compX86
run "5-5" compX86
run "5*5" compX86
run "5/5" compX86
run "val x = 5; x"
run "5*5"
run "5*5" compX86
run "val x = 5; x" compX86
run "val x = 3; x" compX86
run "val x = 3; x * 2" compX86
run "var x = 3; x * 2" compX86
run "var x = 3; x" compX86
test
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3!=3) 4 else 5" compX86
run "if(3==3) 4 else 5" compX86
run "if(3==3) if(5!=5) 1 else 2 else 5" compX86
run "if(3==3) if(5==5) 1 else 2 else 5" compX86
run "if(3==3) if(5!=5) 1 else 2 else 5" compX86
run "if(3==3) if(5!=5) if(3>3) 10 else 11 else 2 else 5" compX86
run "if(3==3) if(5==5) if(3>3) 10 else 11 else 2 else 5" compX86
run "if(3==3) if(5==5) if(3>=3) 10 else 11 else 2 else 5" compX86
run "if(3!=3) if(5==5) if(3>=3) 10 else 11 else 2 else 5" compX86
run "if(1!=2) if(5<6) 8 else 1 else 5" compX86
run "while(1!=1) 2" compX86
run "while(1!=1) 2;" compX86
run "while(1!=1) 2; 3" compX86
run "while(1==1) 2; 3" compX86
run "while(1!=1) 2; 3" compX86
run "while(1==1) 2; 3" compX86
run "val = 5; while(5==5) 2; 3" compX86
run "val x = 5; while(x==5) 2; 3" compX86
run "val x = 0; while(x < 5) x = x + 1; 3" compX86
run "var x = 0; while(x < 5) x = x + 1; 3" compX86
run "var x = 0; while(x < 5) while(x < 4) x = x+1; 3" compX86
run "var x = 0; while(x < 5) while(x < 4) x = x+1; 3; 3" compX86
run "var x = 0; while(x < 5) while(x < 4); x = x+1; 3; 3" compX86
run "val x = 0; while(x < 5) while(x < 4) x = x + 1; 3;8" compX86
run "val x = 0; while(x < 5); while(x < 4) x = x + 1; 3;8" compX86
run "val x = 0; while(x < 5){ while(x < 4) x = x + 1} 3;8" compX86
run "val x = 0; while(x < 5){ while(x < 4) x = x + 1;} 3;8" compX86
run "val x = 0; while(x < 5){ while(x < 4) x = x + 1; 3;8" compX86
run "val x = 0; while(x < 5){ while(x < 4) x = x + 1; 3" compX86
run "val x = 0; while(x < 5){ while(x < 4) x = x + 1; 3}" compX86
run "val x = 0; while(x < 5){ while(x < 4) x = x + 1; 3};" compX86
run "val x = 0; while(x < 5) x = x + 1; 3" compX86
run "var x = 0; while(x < 5) x = x + 1; 3" compX86
run "var x = 0; while(x < 5) { while(x < 4) {x = x + 1}; 3 };8 " compX86
run "val x = 0; while(x < 5) { while(x < 5) {x = x + 1}; 3 };8 " compX86
run "var x = 0; while(x < 5) { while(x < 5) {x = x + 1}; 3 };8 " compX86
run "var x = 0; while(x < 5) { while(x < 5) {x = x + 1}; 3 };x" compX86
run "var x = 0; while(x < 5) x = x + 1; x" compX86
run "var x = 0; while(x < 5) x = x + 1; x" 
run "5+5"
run "var x = 0; while(x < 5) x = x + 1; x" 
run "var x = 0; while(x < 5) x = x + 1; x" intStack
run "var x = 0; while(x < 5) x = x + 1; x" 
run "var x = 0; while(x < 5) x = x + 1; x" intStack
run "var x = 5; x = 2; x
run "var x = 5; x = 2; x"
run "var x = 0; while(x < 5) x = x + 1; x" intStack
run "var x = 0; while(x < 5) x = x + 1; x" compX86
test
run "var x = 0; while(x < 5) x = x + 1; x" compX86
run "var x = 0; while(x < 7) x = x + 1; x" compX86
run "var x = 0; while(x < 7) x = x + 1; x" intStack
run "var x = 0; while(x < 7) x = x + 1; x" compX86
run "1*-4" compX86
run "1* -4" compX86
run "var x = 0; while(x < 7) x = x + 1; x" compX86
run "1*-4" compX86
run "1* -4" compX86
run "1*(-4)" compX86
run "1*-4"
run "1*(-4)"
run "1*-4"
test
run "1*-4"
test
run "12+5*30/5"
run "12+5*30/6"
run "12-5*30/6-5"
testa
test
run "12-5*30/6-5"
run "5/0"
test
run "5/0"
test
run "(12-5*30/6-5)*0"
test
run "12+(-12)"
test
kill --help
kill -h
man help
test examples/scratch.scala
run examples/scratch.scala
run "var x = 0; while(x < 7) x = x + 1; x" 
run examples/scratch.scala
test
c
test
run "if(1+2) 3 else 5'
run "if(1+2) 3 else 5"
run "if(1+2)3 else 5"
if(1==2)3 else 5
run "if(1==2)3 else 5"
test
run "if(1==2)3 else 5"
test
run "val x = 5; if(x==5) x else 5"
tet
test
run "val x = 5; if((x!=5)) x else 5"
var x=10;var b=1;while(x<=0){if(b==5)b else b=b+7};x
run "var x=10;var b=1;while(x<=0){if(b==5)b else b=b+7};x"
test
run "val x = 5; x = 6"
test
run "val x = 5; val x = 6;"
run "val x = 5; val x = 6; x"
test
run "val x = 5; val x = 6; x = 5;"
run "val x = 5; val x = 6; x = 5;"x
run "val x = 5; val x = 6; x = 5;x"
run "val x = 5; val x = 6; x = 5"
test
run "_5+5"
run "/5+5"
run "_5+5"
run "/5+5"
test
run "5_5"
run "5>5"
run "if(3==3)5 else 4
run "if(3==3)5 else 4"
run "if(3+3)5 else 4"
run "5>5"
run "5++5"
run "if(3====3)5 else 4"
test
run "if(3====3)5 else 4"
test
run "var x = 5; var x = 6; x
run "var x = 5; var x = 6; x"
test
run "if(x==5) 5 else 3"
test
ls
run "5+5" intstack
run "5+5-5+5-5+5-5" intstack
test
run "5*5:
run "5*5"
test
run "5* -5"
run "5* -5" intstack
test
run "val x = 5; x"
test
run "val x = -5; x"
test
run "var x = -5; x"
run "var x = 5; x"
test
run "var x = 5; x" intstack
run "var x = -5; x"
run "var x = 5; x = 3; x" intstack
run "var x = 5; x = 3;" intstack
run "var x = 5; x = 3" intstack
run "var x = 5; x = 3"
run "var x = 5; x = 3; x"
run "var x = 5; x = 3" intstack
test
run "var x = 5; x = 3" intstack
test
run "var x = 5; if(x ==5) 7 else 6" intstack
run "var x = 5; if(x !=5) 7 else 6" intstack
test
run "5+-5"
run "if(3==-5)5 else 6"
test
run "var x = 5; if(x ==5) 7 else 6" intstack
test
run "while(5!=5) 3; 5
run "while(5!=5) 3; 5"
run "while(5!=5) 3; 5" intstack
test
run "val x = 5; while(x != 5) x=x+1; else 4
run "val x = 5; while(x != 5) x=x+1; else 4"
run "val x = 5; while(x != 5) x=x+1; x"
run "var x = 5; while(x != 5) x=x+1; x"
run "var x = 0; while(x != 5) x=x+1; x"
test
run "var x = 5; val x = 5; x"
run "val x = 5; val x = 5; x"
run "val x = 5; val y = 5; if(x==y) 5 else  10"
run "val x = 5; val y = 5; if(x==y) 5 else  10" intstack
run "val x = 5; val y = 5; if(x==y) 5 else  10" intstackte
test
tests
test
run "12849219479127412 + 5"
run "1284921947912741989899899992 + 5"
test
run "1284921947912741989899899992 + 5"
run "if(if(5<6){3}else{4} < 4){2}else{9}"
run "1284921947912741989899899992 + 5"
test
